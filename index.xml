<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title/><link>https://alexander-jackson.github.io/</link><description>Recent content on</description><generator>Hugo -- 0.145.0</generator><language>en-gb</language><lastBuildDate>Sat, 24 Aug 2024 17:25:00 +0100</lastBuildDate><atom:link href="https://alexander-jackson.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Postgres Lock Tricks</title><link>https://alexander-jackson.github.io/posts/postgres-lock-tricks/</link><pubDate>Sat, 24 Aug 2024 17:25:00 +0100</pubDate><guid>https://alexander-jackson.github.io/posts/postgres-lock-tricks/</guid><description>&lt;p>Postgres is a much loved relational database system that provides solid
performance and reliability. However, the concurrency model that it provides
(MVCC - multi-version concurrency control) can lead to some interesting
observations.&lt;/p>
&lt;h2 id="how-does-mvcc-work">How does MVCC work?&lt;/h2>
&lt;p>Multi-version concurrency control is not a simple system to explain. It&amp;rsquo;s worth
reading the &lt;a href="https://www.postgresql.org/docs/current/mvcc.html">Postgres documentation&lt;/a> if you&amp;rsquo;re interested in
going deeper with it, but this section aims to provide a small overview.&lt;/p>
&lt;h3 id="read-committed-isolation-level">Read Committed Isolation Level&lt;/h3>
&lt;p>This is the default value for transaction isolation in Postgres and the only
one we&amp;rsquo;ll be discussing in this article. The documentation states:&lt;/p></description></item><item><title>Overriding Kubernetes HPAs with Rust</title><link>https://alexander-jackson.github.io/posts/overriding-hpas-with-rust/</link><pubDate>Tue, 26 Sep 2023 00:00:00 +0000</pubDate><guid>https://alexander-jackson.github.io/posts/overriding-hpas-with-rust/</guid><description>&lt;p>&lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/">Horizontal Pod Autoscalers&lt;/a> (HPAs) are a common concept in the
world of Kubernetes. They allow you to specify that your workloads should scale
based on various factors, such as their CPU or memory consumption. You can also
extend them with custom plugins such as the
&lt;a href="https://github.com/kubernetes-sigs/prometheus-adapter">prometheus-adapter&lt;/a> to scale based on Prometheus metrics.&lt;/p>
&lt;p>However, sometimes you just want to tell Kubernetes &amp;ldquo;give me more pods&amp;rdquo;.&lt;/p>
&lt;p>Perhaps you&amp;rsquo;ve built up a backlog somewhere in the system, such as a processing
queue. The database looks relatively calm and the pods are chugging away, but
not fast enough. The HPA likely won&amp;rsquo;t kick in, there&amp;rsquo;s not enough work being
done.&lt;/p></description></item><item><title>Sybl: Accessible Machine Learning through Ensemble Learning</title><link>https://alexander-jackson.github.io/projects/sybl/</link><pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate><guid>https://alexander-jackson.github.io/projects/sybl/</guid><description>&lt;p>Sybl is an accessible platform that allows users with low technical experience
to gain the benefits of machine learning by providing data. Clients provide
models for training and are reimbursed based on their performance on the
problem.&lt;/p></description></item><item><title>Fisherman: Continuous Deployment</title><link>https://alexander-jackson.github.io/projects/fisherman/</link><pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate><guid>https://alexander-jackson.github.io/projects/fisherman/</guid><description>Something</description></item><item><title>Blackboards: Warwick Barbell Management</title><link>https://alexander-jackson.github.io/projects/blackboards/</link><pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate><guid>https://alexander-jackson.github.io/projects/blackboards/</guid><description>&lt;p>Blackboards is a website written for Warwick Barbell during my time as the
powerlifting captain. It handles registration for club sessions, displaying
member personal bests and running the annual position elections.&lt;/p></description></item><item><title>ptc: Experimental Python to C Compiler</title><link>https://alexander-jackson.github.io/projects/ptc/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://alexander-jackson.github.io/projects/ptc/</guid><description>&lt;p>&lt;code>ptc&lt;/code> is an experimental compiler that converts Python source code into the C
language and was written as my dissertation project.&lt;/p></description></item><item><title>CASTLEGUARD: Anonymised Data Streams with Guaranteed Differential Privacy</title><link>https://alexander-jackson.github.io/projects/castleguard/</link><pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate><guid>https://alexander-jackson.github.io/projects/castleguard/</guid><description>&lt;p>CASTLEGUARD is an extension of the CASTLE algorithm and provides the same
guarantees as its predecessor with the addition of differential privacy. It was
written as part of a team for CS347 Fault Tolerant Systems and published later
that year.&lt;/p></description></item><item><title>About Me</title><link>https://alexander-jackson.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alexander-jackson.github.io/about/</guid><description>&lt;p>I&amp;rsquo;m a software engineer, currently working at Starling Bank as a backend Java
Engineer. This site serves as an extension to my CV, as well as a place where I
discuss projects I have worked on in the past alongside more technical blog
posts.&lt;/p></description></item></channel></rss>